```
SPA: 하나의 HTML 만 존재.
즉, URL 도 딱 하나만 존재 (localhost:8080)
그런데, 이렇게 하면 불편하잖아? 
/login => 로그인화면으로 이동
/main => 메인 화면으로 이동
이게 되면 좋겠는데? 그걸 하게 만드는 게 라우터

라우트: 화면에 해당하는 url
라우팅: 라우트를 바꾸는 행동
라우터: 라우팅해주는 프로그램

보통 login 페이지에서 signup 페이지로 바뀌면 새로고침 일어남
=> 그러나, SPA 는 하나의 HTML 이기 때문에 url 이 바뀌어도 새로고침 없음

Django 즉 서버에서도 url 로 페이지 바꿨는데? 차이점이 무엇인가?
    Django 를 오로지 DRF 즉 REST API 서버 용도로만 쓴다면...
	Django 의 url: REST API 의 요청 주소
		ex) /api/v1/movies => 모든 영화목록 JSON 리턴
	Vue 의 url: 화면의 주소
		ex) /movies => 전체 영화목록이 보이는 화면
		    /login => 로그인화면
```
```
vue 프로젝트 생성 후,
$ vue add router

컴포넌트에서 사용할 땐?
<router-link to="/">Home 페이지로 가기</router-link>
<router-link to="/about">About 페이지로 가기</router-link>

...
그리고 선택된 라우트는 아래 태그로 보여지게 됨
<router-view />

```
```
src/router/index.js
이것이 바로 라우터 설정파일!
다음과 같이 작성되어있다.

import Vue from "vue";
import VueRouter from "vue-router";
import HomeView from "../views/HomeView.vue";
import AboutView from "../views/AboutView.vue";

Vue.use(VueRouter);

const routes = [
  {
    path: "/",
    name: "home",
    component: HomeView,
  },
  {
    path: "/about",
    name: "about",
    component: AboutView,
  },
];

const router = new VueRouter({
  mode: "history",
  base: process.env.BASE_URL,
  routes,
});

export default router;
```
```
즉, 컴포넌트 임포트하고, 각각에 path 로 path, name, component 를 정확히 달아놓으면,
각각의 컴포넌트에서 <router-link to="/"> 가 동작할 때,
to 의 경로에 해당하는 path 의 화면이,
<router-view />
에 보이게 되는것이지!
```
```
이제 각각의 화면을 대표할 컴포넌트를 "라우트 컴포넌트" 라고 편의상 부를건데,
라우트 컴포넌트들은 "views/" 디렉터리에, 끝에 ~View.vue 로 이름지어넣고,
일반 컴포넌트는 "components/" 디렉터리에 둔다.
ex) 로그인 화면을 대표하는 LoginView 는 "views/" 디렉터리에.
	헤더를 담당하는 "AppHeader.vue" 는 "components/" 디렉터리에.
```
```
만약 JavaScript 에서 페이지 이동을 하고 싶다면,
  this.$router.push("/원하는경로") 
를 사용하면 된다!
```
```
추가적으로, 약간만 더 심화해보면
영화 100 개가 있는데, 각각의 디테일 페이지를 보고싶다면?
ex)  /movies/        => 전체 영화 목록
     /movies/:id     => id 에 해당하는 영화 디테일
	ex) /movies/123	   => 123 영화 디테일을 보여줘!
```
```
router/index.js 에 다음과 같이 설정

{
  path: "/movies/:id",
  name: "movieDetail",
  component: MovieDetailView,
},

그리고 쓰고자하는 컴포넌트에 다음과 같이 사용

<template>
  <div>
    <h1>이것은 {{ movieId }}번 영화다!</h1>
  </div>
</template>

<script>
export default {
  computed: {
    movieId() {
      return this.$route.params.id;
    }
  }
}
</script>
```
```
그리고, /movies/123 으로 접속하면
이것은 123번 영화다! 출력될 것.
즉, created 같은 걸 써가지고 미리 api 에 접근해서 params 에 일치하는 데이터 받아오면 되겠지?
```
```
여기까지가, 뷰 라우터의 기초 중에 기초
나머지, 라우터 파람스, 라우터가드, 컴포넌트 가드 등의 내용은 심화내용
페이지 전환과 더불어 고급 단계에서 고려할만한 사항임
```